model pharma

-- Definition of the Hospital class
class Hospital 
    attributes
        idHospital: String
        name: String
end

-- Definition of the Pharmacist class
class Pharmacist 
    attributes
        idPharmacist: String
        name: String
end

-- Definition of the Dispensing class
class Dispensing 
    attributes
        idDispensing: String
        date: Integer
        quantity: Integer
end

-- Definition of the Patient class
class Patient 
    attributes
        idPatient: String
        name: String
        age: Integer
end

-- Definition of the Doctor class
class Doctor 
    attributes
        idDoctor: String
        name: String
end

-- Definition of the Medication class
class Medication 
    attributes
        idMedication: String
        name: String
        description: String
        availableQuantity: Integer
end

-- Definition of the Prescription class
class Prescription 
    attributes
        idPrescription: String
        date: Integer
end

-- Definition of the Inventory class
class Inventory 
    attributes
        idInventory: String
        location: String
end

-- Definition of the Supplier class
class Supplier 
    attributes
        idSupplier: String
        name: String
end


-- Association between Hospital and Pharmacist
association HospitalPharmacist between
    Hospital[1] role hospital
    Pharmacist[*] role pharmacist
end

-- Association between Hospital and Patient
association HospitalPatient between
    Hospital[1] role hospital
    Patient[*] role patient
end

-- Association between Hospital and Doctor
association HospitalDoctor between
    Hospital[1] role hospital
    Doctor[*] role doctor
end

-- Association between Doctor and Prescription
association DoctorPrescription between
    Doctor[1] role Doctor
    Prescription[*] role prescription
end

-- Association between Pharmacist and Dispensing
association PharmacistDispensing between
    Pharmacist[1] role pharmacist
    Dispensing[*] role dispensing
end

-- Association between Patient and Prescription
association PatientPrescription between
    Patient[1] role patient
    Prescription[*] role prescription
end

-- Association between Dispensing and Patient
association DispensingPatient between
    Dispensing[1] role dispensing
    Patient[1] role patient
end

-- Association between Dispensing and Medication
association DispensingMedication between
    Dispensing[1] role dispensing
    Medication[1] role medication
end

-- Association between Medication and Prescription
association MedicationPrescription between
    Medication[*] role Medication
    Prescription[*] role prescription
end

-- Association between Medication and Inventory
association MedicationInventory between
    Medication[*] role Medication
    Inventory[1] role inventory
end

-- Association between Medication and Supplier
association MedicationSupplier between
    Medication[*] role Medication
    Supplier[*] role supplier
end

-- Association between Inventory and Supplier
association InventorySupplier between
    Inventory[1] role Inventory
    Supplier[*] role supplier
end

constraints

context Hospital inv hospitalHasName:
    self.name.size() > 0

context Hospital inv uniqueHospitalId:
    Hospital.allInstances()->isUnique(h | h.idHospital)

context Hospital inv hospitalHasPharmacists:
    self.pharmacist->notEmpty()

context Hospital inv hospitalHasPatients:
    self.patient->notEmpty()

context Hospital inv hospitalHasDoctors:
    self.doctor->notEmpty()

context Pharmacist inv uniquePharmacistId:
    Pharmacist.allInstances()->isUnique(p | p.idPharmacist)

context Pharmacist inv pharmacistHasName:
    self.name.size() > 0

context Pharmacist inv pharmacistAssignedToHospital:
    self.hospital->notEmpty()

context Pharmacist inv pharmacistHasDispensations:
    self.dispensing->notEmpty()

--context Pharmacist inv maxDispensationsPerDay:
--    self.dispensing->select(d | d.date = Date.today())->size() <= 50

context Dispensing inv uniqueDispensingId:
    Dispensing.allInstances()->isUnique(d | d.idDispensing)
--context Dispensing inv dispensingDateValid:
--    self.date <= Date.today()
context Dispensing inv dispensingQuantityPositive:--< Modify by MVM [self.quantity > 0]
(self.quantity >= 0)
context Dispensing inv dispensingReferencesPatient:
    self.patient->notEmpty()
context Dispensing inv dispensingReferencesMedication:
    self.medication->notEmpty()


